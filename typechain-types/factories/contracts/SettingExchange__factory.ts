/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SettingExchange,
  SettingExchangeInterface,
} from "../../contracts/SettingExchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_FeeCollector",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "Fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FeeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "addAllowlistAddressToken1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allAddressToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allAddressTokenLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allAllowlistAddressToken1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allAllowlistAddressToken1Length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistAddressToken1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "changeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFeeCollector",
        type: "address",
      },
    ],
    name: "changeFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "PairOrder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newAmountToken0",
        type: "uint256",
      },
    ],
    name: "changeMinAmountToken0",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "PairOrder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newAmountToken1",
        type: "uint256",
      },
    ],
    name: "changeMinAmountToken1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "durationPaidFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryPair",
    outputs: [
      {
        internalType: "contract IFactoryPair",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isSaveAddressToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minAmountToken0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minAmountToken1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "removeAllowlistAddressToken1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "setAddressToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_durationPaidFee",
        type: "uint256",
      },
    ],
    name: "setDurationPaidFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factoryPair",
        type: "address",
      },
    ],
    name: "setFactoryPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_platformFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userFee",
        type: "uint256",
      },
    ],
    name: "setPlatformAndUserFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "testERC20Token",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "userFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001dab38038062001dab83398181016040528101906200003791906200019a565b620000576200004b620000b760201b60201c565b620000bf60201b60201c565b600a60078190555080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550601e60088190555060466009819055505062000214565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200019481620001fa565b92915050565b600060208284031215620001ad57600080fd5b6000620001bd8482850162000183565b91505092915050565b6000620001d382620001da565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200020581620001c6565b81146200021157600080fd5b50565b611b8780620002246000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063a46018f411610097578063d040f85a11610071578063d040f85a146104df578063e12d79741461050f578063e9c588c51461052b578063f2fde38b14610549576101c4565b8063a46018f414610487578063bef7a2f0146104a5578063ca5a5858146104c3576101c4565b80639371721f116100d35780639371721f146103d957806393a5c98f146104095780639a185df414610439578063a3beed3314610469576101c4565b80638da5cb5b1461036f578063903569841461038d5780639245290d146103bd576101c4565b80636a1db1bf1161016657806372b25c391161014057806372b25c39146102eb578063762fac2814610307578063796e3379146103235780638d1eea0f14610353576101c4565b80636a1db1bf146102a75780636f82d2bf146102c3578063715018a6146102e1576101c4565b80634578d71f116101a25780634578d71f146102355780634c92517c146102515780635bce8fd01461026d5780635fe2eaa814610289576101c4565b8063049032f8146101c957806326232a2e146101f957806342a1bbd214610217575b600080fd5b6101e360048036038101906101de919061143b565b610565565b6040516101f091906118eb565b60405180910390f35b61020161057d565b60405161020e91906118eb565b60405180910390f35b61021f610583565b60405161022c91906118eb565b60405180910390f35b61024f600480360381019061024a91906114e1565b610589565b005b61026b6004803603810190610266919061143b565b61084d565b005b61028760048036038101906102829190611464565b6109a0565b005b6102916109f0565b60405161029e91906118eb565b60405180910390f35b6102c160048036038101906102bc91906114e1565b6109fd565b005b6102cb610a1d565b6040516102d891906117f0565b60405180910390f35b6102e9610a43565b005b610305600480360381019061030091906114e1565b610a57565b005b610321600480360381019061031c919061143b565b610a79565b005b61033d600480360381019061033891906114e1565b610c19565b60405161034a91906117ba565b60405180910390f35b61036d6004803603810190610368919061143b565b610c58565b005b610377610ca4565b60405161038491906117ba565b60405180910390f35b6103a760048036038101906103a2919061143b565b610ccd565b6040516103b491906117d5565b60405180910390f35b6103d760048036038101906103d2919061143b565b610ced565b005b6103f360048036038101906103ee919061143b565b610d39565b60405161040091906117d5565b60405180910390f35b610423600480360381019061041e91906114e1565b610d59565b60405161043091906117ba565b60405180910390f35b610453600480360381019061044e919061143b565b610d98565b60405161046091906118eb565b60405180910390f35b610471610db0565b60405161047e91906118eb565b60405180910390f35b61048f610db6565b60405161049c91906118eb565b60405180910390f35b6104ad610dc3565b6040516104ba91906118eb565b60405180910390f35b6104dd60048036038101906104d89190611533565b610dc9565b005b6104f960048036038101906104f4919061143b565b610dfb565b60405161050691906117d5565b60405180910390f35b61052960048036038101906105249190611464565b61113b565b005b61053361118b565b60405161054091906117ba565b60405180910390f35b610563600480360381019061055e919061143b565b6111b1565b005b600b6020528060005260406000206000915090505481565b60085481565b60095481565b610591611235565b6000600382815481106105cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006003805490509050600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610690576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610687906118cb565b60405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060036001826106f791906119ce565b8154811061072e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660038481548110610793577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003805480610813577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055505050565b610855611235565b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d99061180b565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506003819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6109a8611235565b80600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000600380549050905090565b610a05611235565b6064811115610a1357600080fd5b8060078190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a4b611235565b610a5560006112b3565b565b610a5f611235565b62093a80811115610a6f57600080fd5b80600a8190555050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b009061186b565b60405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610c16576001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506005819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60038181548110610c2957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c60611235565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915054906101000a900460ff1681565b610cf5611235565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60046020528060005260406000206000915054906101000a900460ff1681565b60058181548110610d6957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c6020528060005260406000206000915090505481565b600a5481565b6000600580549050905090565b60075481565b610dd1611235565b60648183610ddf9190611978565b14610de957600080fd5b81600881905550806009819055505050565b600080823b905060008111610e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3c9061188b565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610e8b57600080fd5b505afa925050508015610ec157506040513d6000823e3d601f19601f82011682018060405250810190610ebe91906114a0565b60015b610f00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef79061182b565b60405180910390fd5b508273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610f4757600080fd5b505afa925050508015610f7857506040513d601f19601f82011682018060405250810190610f75919061156f565b60015b610fb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fae9061182b565b60405180910390fd5b508273ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ffe57600080fd5b505afa92505050801561102f57506040513d601f19601f8201168201806040525081019061102c919061150a565b60015b61106e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110659061182b565b60405180910390fd5b508273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110a891906117ba565b60206040518083038186803b1580156110c057600080fd5b505afa9250505080156110f157506040513d601f19601f820116820180604052508101906110ee919061150a565b60015b611130576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111279061182b565b60405180910390fd5b506001915050919050565b611143611235565b80600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6111b9611235565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112209061184b565b60405180910390fd5b611232816112b3565b50565b61123d611377565b73ffffffffffffffffffffffffffffffffffffffff1661125b610ca4565b73ffffffffffffffffffffffffffffffffffffffff16146112b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a8906118ab565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600061139261138d84611937565b611906565b9050828152602081018484840111156113aa57600080fd5b6113b5848285611a7b565b509392505050565b6000813590506113cc81611b0c565b92915050565b600082601f8301126113e357600080fd5b81516113f384826020860161137f565b91505092915050565b60008135905061140b81611b23565b92915050565b60008151905061142081611b23565b92915050565b60008151905061143581611b3a565b92915050565b60006020828403121561144d57600080fd5b600061145b848285016113bd565b91505092915050565b6000806040838503121561147757600080fd5b6000611485858286016113bd565b9250506020611496858286016113fc565b9150509250929050565b6000602082840312156114b257600080fd5b600082015167ffffffffffffffff8111156114cc57600080fd5b6114d8848285016113d2565b91505092915050565b6000602082840312156114f357600080fd5b6000611501848285016113fc565b91505092915050565b60006020828403121561151c57600080fd5b600061152a84828501611411565b91505092915050565b6000806040838503121561154657600080fd5b6000611554858286016113fc565b9250506020611565858286016113fc565b9150509250929050565b60006020828403121561158157600080fd5b600061158f84828501611426565b91505092915050565b6115a181611a02565b82525050565b6115b081611a14565b82525050565b6115bf81611a57565b82525050565b60006115d2600b83611967565b91507f416c72656164795f4144440000000000000000000000000000000000000000006000830152602082019050919050565b6000611612601683611967565b91507f746869732061646472657373206e6f74206572633230000000000000000000006000830152602082019050919050565b6000611652602683611967565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116b8600e83611967565b91507f696e76616c69642063616c6c65720000000000000000000000000000000000006000830152602082019050919050565b60006116f8601983611967565b91507f746869732061646472657373206e6f7420636f6e7472616374000000000000006000830152602082019050919050565b6000611738602083611967565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000611778600783611967565b91507f4e6f745f414444000000000000000000000000000000000000000000000000006000830152602082019050919050565b6117b481611a40565b82525050565b60006020820190506117cf6000830184611598565b92915050565b60006020820190506117ea60008301846115a7565b92915050565b600060208201905061180560008301846115b6565b92915050565b60006020820190508181036000830152611824816115c5565b9050919050565b6000602082019050818103600083015261184481611605565b9050919050565b6000602082019050818103600083015261186481611645565b9050919050565b60006020820190508181036000830152611884816116ab565b9050919050565b600060208201905081810360008301526118a4816116eb565b9050919050565b600060208201905081810360008301526118c48161172b565b9050919050565b600060208201905081810360008301526118e48161176b565b9050919050565b600060208201905061190060008301846117ab565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561192d5761192c611add565b5b8060405250919050565b600067ffffffffffffffff82111561195257611951611add565b5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b600061198382611a40565b915061198e83611a40565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119c3576119c2611aae565b5b828201905092915050565b60006119d982611a40565b91506119e483611a40565b9250828210156119f7576119f6611aae565b5b828203905092915050565b6000611a0d82611a20565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611a6282611a69565b9050919050565b6000611a7482611a20565b9050919050565b60005b83811015611a99578082015181840152602081019050611a7e565b83811115611aa8576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b1581611a02565b8114611b2057600080fd5b50565b611b2c81611a40565b8114611b3757600080fd5b50565b611b4381611a4a565b8114611b4e57600080fd5b5056fea26469706673582212208cdcf5ba1c128e4780ad1b705606ab59290a2962b11c63d8c50f36636751ca1b64736f6c63430008000033";

type SettingExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SettingExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SettingExchange__factory extends ContractFactory {
  constructor(...args: SettingExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _FeeCollector: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SettingExchange> {
    return super.deploy(
      _FeeCollector,
      overrides || {}
    ) as Promise<SettingExchange>;
  }
  override getDeployTransaction(
    _FeeCollector: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_FeeCollector, overrides || {});
  }
  override attach(address: string): SettingExchange {
    return super.attach(address) as SettingExchange;
  }
  override connect(signer: Signer): SettingExchange__factory {
    return super.connect(signer) as SettingExchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SettingExchangeInterface {
    return new utils.Interface(_abi) as SettingExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SettingExchange {
    return new Contract(address, _abi, signerOrProvider) as SettingExchange;
  }
}
