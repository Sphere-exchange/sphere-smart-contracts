/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IBlast,
  IBlastInterface,
} from "../../../contracts/interface/IBlast";

const _abi = [
  {
    inputs: [],
    name: "configureClaimableGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governor",
        type: "address",
      },
    ],
    name: "configureGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IBlast__factory {
  static readonly abi = _abi;
  static createInterface(): IBlastInterface {
    return new utils.Interface(_abi) as IBlastInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IBlast {
    return new Contract(address, _abi, signerOrProvider) as IBlast;
  }
}
